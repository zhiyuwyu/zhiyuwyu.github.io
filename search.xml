<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>一篇搞定 SpringBoot+Mybatis+Shiro 实现多角色权限管理</title>
    <url>/2021/07/14/%E4%B8%80%E7%AF%87%E6%90%9E%E5%AE%9A%20SpringBoot+Mybatis+Shiro%20%E5%AE%9E%E7%8E%B0%E5%A4%9A%E8%A7%92%E8%89%B2%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<blockquote>
<p>初衷：我在网上想找整合springboot+mybatis+shiro并且多角色认证的博客，发现找了好久也没有找到想要的，现在自己会了，就打算写个博客分享出去,希望能帮到你。<br>原创不易，请点赞支持！</p>
</blockquote>
<blockquote>
<p>该项目不会将过多基础，直接实战，比较使用于有一点基础的， 并且想整合springboot+mybatis+shiro的朋友们。</p>
</blockquote>
<p>代码和数据库sql都放在github,链接如下：<a href="https://github.com/zhiyuwyu/springboot-mybatis-shiro.git">https://github.com/zhiyuwyu/springboot-mybatis-shiro.git</a></p>
<h2 id="1、了解需求"><a href="#1、了解需求" class="headerlink" title="1、了解需求"></a>1、了解需求</h2><h3 id="1-1、需求"><a href="#1-1、需求" class="headerlink" title="1.1、需求"></a>1.1、需求</h3><ul>
<li>首页页面必须登录成功之后才能访问</li>
<li>所有用户、游客等都可访问登录页面、测试页面，无需登录</li>
<li>拥有 root 角色的用户可以访问所有页面，包括添加页面、删除页面、查询页面、测试页面等</li>
<li>拥有admin 角色的用户可以访问添加页面，查询页面、测试页面，除了删除页面不能访问</li>
<li>拥有 user 角色的用户可以访问 查询页面、测试页面，除了添加页面、删除页面不能访问<span id="more"></span>
<h3 id="1-2、了解页面"><a href="#1-2、了解页面" class="headerlink" title="1.2、了解页面"></a>1.2、了解页面</h3></li>
</ul>
<p>==登录页面如下==</p>
<p><img src="https://img-blog.csdnimg.cn/20210713124216307.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>==首页页面如下==</p>
<p><img src="https://img-blog.csdnimg.cn/20210713124255181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>==分别点击添加、删除、查询、测试超链接，展示的内容如下==<br><img src="https://img-blog.csdnimg.cn/20210713124326379.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2 id="2、准备数据库环境"><a href="#2、准备数据库环境" class="headerlink" title="2、准备数据库环境"></a>2、准备数据库环境</h2><p>新建一个<code>test</code>数据库,创建两个表（role、user）并插入数据，sql 如下</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Navicat Premium Data Transfer</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Source Server         : LocalHost</span></span><br><span class="line"><span class="comment"> Source Server Type    : MySQL</span></span><br><span class="line"><span class="comment"> Source Server Version : 50731</span></span><br><span class="line"><span class="comment"> Source Host           : localhost:3306</span></span><br><span class="line"><span class="comment"> Source Schema         : test</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Target Server Type    : MySQL</span></span><br><span class="line"><span class="comment"> Target Server Version : 50731</span></span><br><span class="line"><span class="comment"> File Encoding         : 65001</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Date: 12/07/2021 21:08:51</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> NAMES utf8mb4;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for role</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `role`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `role`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">100</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `remark` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">4</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_unicode_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of role</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `role` <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;超级管理员&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `role` <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;管理员&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `role` <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;user&#x27;</span>, <span class="string">&#x27;普通用户&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for user</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `<span class="keyword">user</span>`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `<span class="keyword">user</span>`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">100</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `role_id` <span class="type">int</span>(<span class="number">3</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">5</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_unicode_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of user</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `<span class="keyword">user</span>` <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;rootA&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `<span class="keyword">user</span>` <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;adminA&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `<span class="keyword">user</span>` <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;userA&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `<span class="keyword">user</span>` <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">&#x27;userB&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure>

<p>role 表数据如下：<br><img src="https://img-blog.csdnimg.cn/20210713124357352.png#pic_center" alt="在这里插入图片描述"></p>
<p>user 表数据如下：<br><img src="https://img-blog.csdnimg.cn/20210713124426278.png#pic_center" alt="在这里插入图片描述"></p>
<h2 id="3、编写代码"><a href="#3、编写代码" class="headerlink" title="3、编写代码"></a>3、编写代码</h2><h3 id="3-1、新建SpringBoot-工程项目"><a href="#3-1、新建SpringBoot-工程项目" class="headerlink" title="3.1、新建SpringBoot 工程项目"></a>3.1、新建SpringBoot 工程项目</h3><p><img src="https://img-blog.csdnimg.cn/2021071312450297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210713124523647.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="3-2、添加如下依赖"><a href="#3-2、添加如下依赖" class="headerlink" title="3.2、添加如下依赖"></a>3.2、添加如下依赖</h3><blockquote>
<p>全部依赖如下</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- thymeleaf --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- web --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mysql--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Spring对Shiro支持 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--test单元测试--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.16.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-3、编写代码连接数据库并测试"><a href="#3-3、编写代码连接数据库并测试" class="headerlink" title="3.3、编写代码连接数据库并测试"></a>3.3、编写代码连接数据库并测试</h3><h4 id="3-3-1、配置数据库信息"><a href="#3-3-1、配置数据库信息" class="headerlink" title="3.3.1、配置数据库信息"></a>3.3.1、配置数据库信息</h4><blockquote>
<p>把 application.properties 文件修改成 application.yml，并添加如下内容 </p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span> </span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span> </span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test</span></span><br><span class="line"><span class="comment"># 打印sql语句</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">com:</span></span><br><span class="line">      <span class="attr">huang:</span></span><br><span class="line">        <span class="attr">shiro1:</span></span><br><span class="line">          <span class="attr">mapper:</span> <span class="string">debug</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="3-3-2、编写实体类-entity"><a href="#3-3-2、编写实体类-entity" class="headerlink" title="3.3.2、编写实体类 entity"></a>3.3.2、编写实体类 entity</h4><blockquote>
<p>新建一个entity 包，分别添加下面两个实体类</p>
</blockquote>
<p>User.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.huang.springbootmybatisshiro.entity;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * (User)实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">227751358530931042L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer roleId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Role role;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>Role.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.huang.springbootmybatisshiro.entity;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * (Role)实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Role</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">76407922564857637L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String remark;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-3-3、mapper"><a href="#3-3-3、mapper" class="headerlink" title="3.3.3、mapper"></a>3.3.3、mapper</h4><blockquote>
<p>新建一个 mapper 包，分别创建下面两个文件</p>
</blockquote>
<p>UserMapper.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 Username 查询单条数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">User <span class="title">queryByUsername</span><span class="params">(<span class="meta">@Param(&quot;username&quot;)</span> String username)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>UserMapper.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.huang.springbootmybatisshiro.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">type</span>=<span class="string">&quot;com.huang.springbootmybatisshiro.entity.User&quot;</span> <span class="attr">id</span>=<span class="string">&quot;UserMap&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;INTEGER&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;roleId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;role_id&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;INTEGER&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;UserMapWithRole&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.huang.springbootmybatisshiro.entity.User&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;UserMap&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;role&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;com.huang.springbootmybatisshiro.entity.Role&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;rid&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;rname&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;remark&quot;</span> <span class="attr">column</span>=<span class="string">&quot;rremark&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryByUsername&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserMapWithRole&quot;</span>&gt;</span></span><br><span class="line">        select</span><br><span class="line">        u.*,r.id rid,r.name rname,r.remark rremark</span><br><span class="line">        from test.user u,test.role r</span><br><span class="line">        where u.role_id=r.id</span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;username != null and username != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">            and username = #&#123;username&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>==注意：==</p>
<blockquote>
<p>UserMapper.xml 和UserMapper.java 文件写在同一目录下，需在pom.xml文件添加如下内容</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>并且在启动类中添加注解@mapperscan 全局扫描 mapper 文件</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(basePackages = &quot;com.huang.springbootmybatisshiro.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootMybatisShiroApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringbootMybatisShiroApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-3-4、service"><a href="#3-3-4、service" class="headerlink" title="3.3.4、service"></a>3.3.4、service</h4><blockquote>
<p>新建一个包service，并添加 Userservice.java 文件如下</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryByUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.queryByUsername(username);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.3.4 测试是否可以正常获取数据库信息</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpringbootMybatisShiroApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserService userService;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        User rootA = userService.queryByUsername(<span class="string">&quot;rootA&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;=====================================&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;rootA = &quot;</span> + rootA);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果输入如下数据则成功，就可以进行下一步了</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20210713124558688.png#pic_center" alt="在这里插入图片描述"></p>
<h3 id="3-4、编写页面"><a href="#3-4、编写页面" class="headerlink" title="3.4、编写页面"></a>3.4、编写页面</h3><p>在resources目录下新建文件夹templates（有就不用了），在templates 下添加如下页面</p>
<ul>
<li>add.html 添加页面</li>
<li>delete.html 删除页面</li>
<li>index.html 首页页面</li>
<li>login.html 登录页面</li>
<li>query.html 查询页面</li>
<li>test.html 测试页面</li>
<li>unauthorized.html 未授权页面</li>
</ul>
<blockquote>
<p>add.html</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>add<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>添加页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>delete.html</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>update<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>删除页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>index.html</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">进入用户添加页面： <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;add&quot;</span>&gt;</span>添加页面<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">进入用户删除页面： <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;delete&quot;</span>&gt;</span>删除页面<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">进入用户查询页面： <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;query&quot;</span>&gt;</span>查询页面<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">进入用户测试页面： <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;test&quot;</span>&gt;</span>测试页面<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>login.html</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>login<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>登录页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;msg&#125;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;login&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>query.html</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>query<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>查询页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>test.html</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>测试页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>测试页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>unauthorized.html。当访问不够权限的页面时会跳转到该页面</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>unauthorized<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>你未授权，请联系管理员<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-5、编写-shiro-的有关配置"><a href="#3-5、编写-shiro-的有关配置" class="headerlink" title="3.5、编写 shiro 的有关配置"></a>3.5、编写 shiro 的有关配置</h3><p>新建一个config 包，添加以下文件</p>
<blockquote>
<p>CustomRealm.java</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Zhiyu</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2021/7/13 10:40</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 主要用于用户数据和shiro的交互工作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 授权：给当前用户授权，以便能访问</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> principals</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principals)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// principal 就是下面的方法 doGetAuthenticationInfo 中的return new SimpleAuthenticationInfo(user, user.getPassword(), &quot;&quot;) 中的第一个参数 user 赋值的</span></span><br><span class="line">        User principal = (User) principals.getPrimaryPrincipal();</span><br><span class="line">        System.out.println(<span class="string">&quot;principal = &quot;</span> + principal);</span><br><span class="line">        <span class="comment">// 给资源进行授权</span></span><br><span class="line">        SimpleAuthorizationInfo info = <span class="keyword">new</span> SimpleAuthorizationInfo();</span><br><span class="line">        <span class="comment">// 授权该用户的本身角色的权限</span></span><br><span class="line">        info.addRole(principal.getRole().getName());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 认证：能不能登录等认证</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> authenticationToken</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> AuthenticationException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------进入了认证逻辑---------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// token 中存储着 subject.login(token) 中传过来的数据</span></span><br><span class="line">        UsernamePasswordToken token = (UsernamePasswordToken) authenticationToken;</span><br><span class="line">        String username = token.getUsername();</span><br><span class="line">        <span class="comment">// 这里假设，数据库中的 username 字段是唯一字段，可以作为唯一标识，实际开发中可以适当修改，换汤不换药</span></span><br><span class="line">        <span class="comment">// 根据 username 去数据库查询用户信息</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 数据库查询回来的数据</span></span><br><span class="line">        User user = userService.queryByUsername(username);</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 用户名不存在</span></span><br><span class="line">            <span class="comment">// return null;  shiro 底层会抛出UnknowAccountException</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UnknownAccountException();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第一个参数 user: 代表传值,及保存用户的信息，后面会用到</span></span><br><span class="line">        <span class="comment">// 第二个参数 填真正的密码，shiro 会帮我们做密码验证，无需我们自己做密码验证逻辑</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SimpleAuthenticationInfo(user, user.getPassword(), <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>ShiroConfig.java</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Zhiyu</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2021/7/13 10:40</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: shiro 的配置</span></span><br><span class="line"><span class="comment"> * 完成下面三件事</span></span><br><span class="line"><span class="comment"> * 1.创建 ShiroFilterFactoryBean</span></span><br><span class="line"><span class="comment"> * 2.DefaultWebSecurityManager</span></span><br><span class="line"><span class="comment"> * 3.创建Realm并关联</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean(name = &quot;customRealm&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CustomRealm <span class="title">customRealm</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> CustomRealm();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = &quot;securityManager&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SecurityManager <span class="title">securityManager</span><span class="params">(CustomRealm customRealm)</span> </span>&#123;</span><br><span class="line">        DefaultWebSecurityManager manager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line">        manager.setRealm(customRealm);</span><br><span class="line">        <span class="keyword">return</span> manager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过滤器配置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> securityManager</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">shiroFilterFactoryBean</span><span class="params">(SecurityManager securityManager)</span> </span>&#123;</span><br><span class="line">        ShiroFilterFactoryBean shiroFilterFactoryBean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line">        shiroFilterFactoryBean.setSecurityManager(securityManager);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *    Shiro内置过滤器，可以实现权限相关的拦截器</span></span><br><span class="line"><span class="comment">         *    常用的过滤器：</span></span><br><span class="line"><span class="comment">         *       anon: 无需认证（登录）可以访问</span></span><br><span class="line"><span class="comment">         *       authc: 必须认证才可以访问</span></span><br><span class="line"><span class="comment">         *       user: 如果使用rememberMe的功能可以直接访问</span></span><br><span class="line"><span class="comment">         *       perms： 该资源必须得到资源权限才可以访问</span></span><br><span class="line"><span class="comment">         *       roles: 该资源必须得到角色权限才可以访问</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">// 1. 权限相关的拦截器（什么路径需要什么权限）</span></span><br><span class="line">        LinkedHashMap&lt;String, String&gt; filterMap = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">        filterMap.put(<span class="string">&quot;/delete&quot;</span>, <span class="string">&quot;roles[root]&quot;</span>); <span class="comment">//roles[root] 意思是访问/delete 需要角色 root</span></span><br><span class="line">        <span class="comment">// roles[admin,root]意思是访问/add 需要角色 admin或者root。</span></span><br><span class="line">        <span class="comment">// 如果不配置 RoleFilter，解决多角色and关系，则roles[admin,root]意思就是访问/add 需要 admin和root两个角色同时。</span></span><br><span class="line">        filterMap.put(<span class="string">&quot;/add&quot;</span>, <span class="string">&quot;roles[admin,root]&quot;</span>);</span><br><span class="line">        <span class="comment">// anon，意识是/test、/login / 无需认证（登录）可以访问</span></span><br><span class="line">        filterMap.put(<span class="string">&quot;/test&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/login&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        filterMap.put(<span class="string">&quot;/&quot;</span>, <span class="string">&quot;anon&quot;</span>);</span><br><span class="line">        <span class="comment">// authc 其余的访问都必须认证才可以访问，</span></span><br><span class="line">        filterMap.put(<span class="string">&quot;/*&quot;</span>, <span class="string">&quot;authc&quot;</span>);</span><br><span class="line">        shiroFilterFactoryBean.setFilterChainDefinitionMap(filterMap);<span class="comment">// 添加shiro 权限过滤器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 配置自定义 or 角色 认证，把自定义过滤器配置进去即可</span></span><br><span class="line">        LinkedHashMap&lt;String, Filter&gt; filters = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">        filters.put(<span class="string">&quot;roles&quot;</span>, <span class="keyword">new</span> RoleFilter());</span><br><span class="line">        shiroFilterFactoryBean.setFilters(filters);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 修改默认的登录页面和未授权页面</span></span><br><span class="line">        <span class="comment">// 即访问需要登录有页面时会跳转到 /toLogin 请求</span></span><br><span class="line">        <span class="comment">// 即访问需要不够权限的时候页面时会跳转到 /toLogin 请求</span></span><br><span class="line">        shiroFilterFactoryBean.setLoginUrl(<span class="string">&quot;/unauthorized&quot;</span>);<span class="comment">// 修改调整的登录页面</span></span><br><span class="line">        shiroFilterFactoryBean.setUnauthorizedUrl(<span class="string">&quot;/unauthorized&quot;</span>);<span class="comment">// 设置未授权提示页面</span></span><br><span class="line">        <span class="keyword">return</span> shiroFilterFactoryBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<blockquote>
<p>RoleFilter.java</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Zhiyu</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span>: 2021/7/13 11:08</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 重写Shiro自带角色权限过滤器</span></span><br><span class="line"><span class="comment"> * shiro自带的方法同一权限只能分配一个角色，默认所个角色的时候是 and 关系，不是 or 关系</span></span><br><span class="line"><span class="comment"> * 所以重写 重写Shiro自带角色权限过滤器 解决多角色 的时候是 or 关系</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RoleFilter</span> <span class="keyword">extends</span> <span class="title">RolesAuthorizationFilter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAccessAllowed</span><span class="params">(ServletRequest request, ServletResponse response, Object mappedValue)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Subject subject = getSubject(request, response);</span><br><span class="line">        <span class="keyword">final</span> String[] rolesArray = (String[]) mappedValue;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (rolesArray == <span class="keyword">null</span> || rolesArray.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 无指定角色时，无需检查，允许访问</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String roleName : rolesArray) &#123;</span><br><span class="line">            <span class="keyword">if</span> (subject.hasRole(roleName)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-6、编写Controller层代码"><a href="#3-6、编写Controller层代码" class="headerlink" title="3.6、编写Controller层代码"></a>3.6、编写Controller层代码</h3><blockquote>
<p>新建一个controller包，添加 UserController.java 文件，内容如下</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用 shiro 编写认证(登录)逻辑</span></span><br><span class="line"><span class="comment">     * 1. 获取 Subject</span></span><br><span class="line"><span class="comment">     * 2. 封装用户数据</span></span><br><span class="line"><span class="comment">     * 3. 执行登录方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(String username, String password, Model model)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;username = &quot;</span> + username);</span><br><span class="line">        System.out.println(<span class="string">&quot;password = &quot;</span> + password);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1.获取 Subject</span></span><br><span class="line">        Subject subject = SecurityUtils.getSubject();</span><br><span class="line">        <span class="comment">// 2. 封装用户数据</span></span><br><span class="line">        UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(username, password);</span><br><span class="line">        String msg = <span class="string">&quot;登录成功&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 3. 执行登录方法, 到 CustomRealm 类的doGetAuthenticationInfo中去执行认证逻辑</span></span><br><span class="line">            subject.login(token);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownAccountException uae) &#123;</span><br><span class="line">            msg = <span class="string">&quot;未知账户&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IncorrectCredentialsException ice) &#123;</span><br><span class="line">            msg = <span class="string">&quot;密码不正确&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (LockedAccountException lae) &#123;</span><br><span class="line">            msg = <span class="string">&quot;账户已锁定&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ExcessiveAttemptsException eae) &#123;</span><br><span class="line">            msg = <span class="string">&quot;用户名或密码错误次数过多&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (AuthenticationException ae) &#123;</span><br><span class="line">            msg = <span class="string">&quot;用户名或密码不正确！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>, msg);</span><br><span class="line">        <span class="keyword">if</span> (subject.isAuthenticated()) &#123;</span><br><span class="line">            <span class="comment">// 登录成功，跳转到 index.html</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;redirect:/index&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            token.clear();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>7、编写 WebMvcConfig, 配置无逻辑的访问页面跳转</p>
<blockquote>
<p>在config 包下新建 WebMvcConfig.java ，代码如下</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这里配置一些无逻辑处理的页面请求</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * registry.addViewController(&quot;/add&quot;).setViewName(&quot;add&quot;);</span></span><br><span class="line"><span class="comment">         * 的意识等价于 在controller 层的</span></span><br><span class="line"><span class="comment">         *     <span class="doctag">@RequestMapping</span>(&quot;/add&quot;)</span></span><br><span class="line"><span class="comment">         *     public String add() &#123;</span></span><br><span class="line"><span class="comment">         *         return &quot;add&quot;; // 跳转到 add.html 页面</span></span><br><span class="line"><span class="comment">         *     &#125;</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *  所以registry.addViewController(&quot;/add&quot;).setViewName(&quot;add&quot;);</span></span><br><span class="line"><span class="comment">         *  意思是：访问 /add 就会跳转到 add.html 页面</span></span><br><span class="line"><span class="comment">         *  下面的以此类推</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        registry.addViewController(<span class="string">&quot;/add&quot;</span>).setViewName(<span class="string">&quot;add&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/delete&quot;</span>).setViewName(<span class="string">&quot;delete&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/query&quot;</span>).setViewName(<span class="string">&quot;query&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/toLogin&quot;</span>).setViewName(<span class="string">&quot;login&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/&quot;</span>).setViewName(<span class="string">&quot;login&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/unauthorized&quot;</span>).setViewName(<span class="string">&quot;unauthorized&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/index&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/test&quot;</span>).setViewName(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>启动项目进行测试</p>
</blockquote>
<h2 id="4、测试"><a href="#4、测试" class="headerlink" title="4、测试"></a>4、测试</h2><blockquote>
<p>User 表数据如下</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20210713124634244.png#pic_center" alt="在这里插入图片描述"></p>
<h4 id="4-0、游客访问"><a href="#4-0、游客访问" class="headerlink" title="4.0、游客访问"></a>4.0、游客访问</h4><blockquote>
<p>游客直接在浏览器输入下面的地址</p>
</blockquote>
<ul>
<li><p><code>http://localhost:8080/add</code></p>
</li>
<li><p><code>http://localhost:8080/delete</code> </p>
</li>
<li><p><code>http://localhost:8080/query</code></p>
</li>
</ul>
<p>都是下面会跳转到登录页面</p>
<p>除了访问<code>http://localhost:8080/test</code> 可以正确跳转<br><img src="https://img-blog.csdnimg.cn/2021071312470373.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h4 id="4-1、测试无用户登录"><a href="#4-1、测试无用户登录" class="headerlink" title="4.1、测试无用户登录"></a>4.1、测试无用户登录</h4><p>访问 <code>http://localhost:8080/</code>, 输入如下信息</p>
<p><img src="https://img-blog.csdnimg.cn/20210713124749163.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>点击提交，然后显示的页面如下</p>
<p><img src="https://img-blog.csdnimg.cn/20210713124811429.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h4 id="4-2、测试密码不正确登录"><a href="#4-2、测试密码不正确登录" class="headerlink" title="4.2、测试密码不正确登录"></a>4.2、测试密码不正确登录</h4><p>访问 <code>http://localhost:8080/</code>, 输入如下信息<br><img src="https://img-blog.csdnimg.cn/20210713124834690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>点击提交，然后显示的页面如下<br><img src="https://img-blog.csdnimg.cn/20210713124902637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h4 id="4-3、测试-rootA用户正确登录"><a href="#4-3、测试-rootA用户正确登录" class="headerlink" title="4.3、测试 rootA用户正确登录"></a>4.3、测试 rootA用户正确登录</h4><p>访问 <code>http://localhost:8080/</code>, 输入如下信息<br><img src="https://img-blog.csdnimg.cn/20210713124945325.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>点击提交，然后显示的页面如下</p>
<p><img src="https://img-blog.csdnimg.cn/20210713125014703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>分别点击添加、删除、查询、测试页面，分别显示的页面如下</p>
<p><img src="https://img-blog.csdnimg.cn/20210713125112872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<blockquote>
<p>结果：可以看到全部页面都可以正常访问。</p>
</blockquote>
<h4 id="4-4、测试adminA用户正确登录"><a href="#4-4、测试adminA用户正确登录" class="headerlink" title="4.4、测试adminA用户正确登录"></a>4.4、测试adminA用户正确登录</h4><p>访问 <code>http://localhost:8080/</code>, 输入如下信息<br><img src="https://img-blog.csdnimg.cn/20210713125136888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>点击提交，然后显示的页面如下</p>
<p><img src="https://img-blog.csdnimg.cn/20210713125014703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>分别点击添加、删除、查询、测试页面，分别显示的页面如下</p>
<p><img src="https://img-blog.csdnimg.cn/20210713125212564.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<blockquote>
<p>结果：拥有admin 角色的用户可以访问添加页面，查询页面、测试页面，除了删除页面不能访问</p>
</blockquote>
<h4 id="4-5、测试userA用户正确登录"><a href="#4-5、测试userA用户正确登录" class="headerlink" title="4.5、测试userA用户正确登录"></a>4.5、测试userA用户正确登录</h4><p>访问 <code>http://localhost:8080/</code>, 输入如下信息</p>
<p><img src="https://img-blog.csdnimg.cn/20210713125241923.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>点击提交，然后显示的页面如下</p>
<p><img src="https://img-blog.csdnimg.cn/20210713125014703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>分别点击添加、删除、查询、测试页面，分别显示的页面如下<br><img src="https://img-blog.csdnimg.cn/20210713125302892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzczMjY5OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<blockquote>
<p>结果：拥有 user 角色的用户可以访问 查询页面、测试页面，除了添加页面、删除页面不能访问</p>
</blockquote>
<h2 id="5、结语"><a href="#5、结语" class="headerlink" title="5、结语"></a>5、结语</h2><ul>
<li>该项目不会将过多基础，直接实战，比较使用有一点基础的。</li>
<li>该项目中没有使用密码加密，如果多人浏览并反馈需要，我可以再写篇密码加密认证的</li>
<li>都是原创，希望看到这的能够点个赞支持一些。</li>
<li>代码和数据库sql都放在github,链接如下：<a href="https://github.com/JiuRiYunYue/springboot-mybatis-shiro.git">https://github.com/JiuRiYunYue/springboot-mybatis-shiro.git</a></li>
</ul>
]]></content>
      <categories>
        <category>整合</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
        <tag>Mybatis</tag>
        <tag>Shiro</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot-Vue部署阿里云liunx服务器</title>
    <url>/2021/07/14/SpringBoot-Vue%E9%83%A8%E7%BD%B2%E9%98%BF%E9%87%8C%E4%BA%91liunx%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><ul>
<li>SpringBoot - Vue 前后端分离项目确保能够在本机完成前后端连接，正常访问！</li>
<li>阿里云部署了 java 环境。</li>
<li>配好 mysql 环境。</li>
<li>Tomcat 不用也行，因为SpringBoot 已经内置了Tomcat</li>
</ul>
<h1 id="一、前后端合并"><a href="#一、前后端合并" class="headerlink" title="一、前后端合并"></a>一、前后端合并</h1><p>1、打包 前端静态资源</p>
<p>注意：</p>
<ul>
<li>Vue 中的项目文件的 url 改为 服务器的IP 地址，不是本地的IP地址。</li>
<li>确保打包前的Vue 项目没有任何错误！</li>
</ul>
<p>在项目的路径下打开cmd 输入 <code>npm run build</code></p>
<p><img src="https://gitee.com/ZhiyuHuang/image2/raw/master/img/20201024171245.png" alt="image-20201024171238333"></p>
<p>看到输出 <code>Build complete</code> 即代表打包成功！</p>
<span id="more"></span>

<p>2、观察项目路径下的文件目录是否多了一个dist 文件下</p>
<p><img src="https://gitee.com/ZhiyuHuang/image2/raw/master/img/20201024171530.png" alt="image-20201024171530665"></p>
<p>文件夹下的内容为：</p>
<p><img src="https://gitee.com/ZhiyuHuang/image2/raw/master/img/20201024171712.png" alt="image-20201024171712367"></p>
<p>3、将 static 和 index.html 文件放到SpringBoot 的resource 资源路径下的static 目录下，如果没有static 文件夹，自己新建一个static 文件下，最终复制过去之后的项目结构图如下：</p>
<p><img src="https://gitee.com/ZhiyuHuang/image2/raw/master/img/20201024172039.png" alt="image-20201024172039172"></p>
<p>4、项目打包成jar包</p>
<p>注意：</p>
<ul>
<li>数据库的 url 是否正确；一般要改为服务器的IP地址，不是本地IP地址。 </li>
</ul>
<p>步骤一、先双击 <code>clean</code> ，静等一会</p>
<p>步骤二、然后再双击<code> package</code> ，静等一会</p>
<p>步骤三、观察输出框下面出现若出现 <code>BUILD SUCCESS</code> 代表 jar 包打包成功！</p>
<p>步骤四、观察项目结构目录下的 target 是否多了一个 <code>.jar </code>包</p>
<p>如果有，打包成功！</p>
<p><img src="https://gitee.com/ZhiyuHuang/image2/raw/master/img/20201024172727.png" alt="image-20201024172726821"></p>
<h1 id="二、jar-包-上传到服务器"><a href="#二、jar-包-上传到服务器" class="headerlink" title="二、jar 包 上传到服务器"></a>二、jar 包 上传到服务器</h1><p>我是通过 xftp 上传到服务器当中</p>
<p><img src="https://gitee.com/ZhiyuHuang/image2/raw/master/img/20201024173308.png" alt="image-20201024173308001"></p>
<h1 id="三、运行-jar"><a href="#三、运行-jar" class="headerlink" title="三、运行 jar"></a>三、运行 jar</h1><p>进入到jar 包的目录下，执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -jar .jar包名       </span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/ZhiyuHuang/image2/raw/master/img/20201024173554.png" alt="image-20201024173554755"></p>
<p>这个时候就已经大功告成了！去浏览器输入服务器IP地址及端口号访问吧！</p>
<h1 id="四、项目在服务器上自动不间断地跑"><a href="#四、项目在服务器上自动不间断地跑" class="headerlink" title="四、项目在服务器上自动不间断地跑"></a>四、项目在服务器上自动不间断地跑</h1><p>还没完呢，这种启动方式是<strong>一次启动</strong></p>
<p>当我们关掉Xshell的时候，我们的网站又访问不上了，又得重新打开Xshell，执行 java -jar ***.jar。所以我们要使用下面的方法让这个项目在服务器上自动不间断地跑.</p>
<p>1、关掉重启一下Xshell（这样的话原本的项目就停掉了）</p>
<p>创建并编写文件<code> start.sh</code>,向其中添加字段 ：<code> java -jar ***.jar</code> 。</p>
<p>按ESC + :wq + 回车键保存退出</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim start.sh   <span class="comment"># 编写start.sh 文件</span></span><br><span class="line"><span class="comment">#内容如下：</span></span><br><span class="line">java -jar ***.jar　  <span class="comment"># *** 为项目jar 包的名称　　　　</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/ZhiyuHuang/image2/raw/master/img/20201024195113.png" alt="image-20201024195113294"></p>
<p>2、 给这个start.sh 管理员权限，然后用nohup指令不间断地运行（nohup指令：忽略所有挂断（SIGHUP）信号，不挂断地运行命令）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod 777 start.sh  //赋予管理员权限</span><br><span class="line">nohup  ./start.sh &amp;  //不间断运行文件内的指令</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/ZhiyuHuang/image2/raw/master/img/20201024194950.png" alt="image-20201024194949928"></p>
<p>3、使用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -anp | grep 8081   <span class="comment">#8080:项目的端口号 </span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/ZhiyuHuang/image2/raw/master/img/20201024195033.png" alt="image-20201024195033347"></p>
<h1 id="五、可能出现的问题"><a href="#五、可能出现的问题" class="headerlink" title="五、可能出现的问题"></a>五、可能出现的问题</h1><p>1、<code>com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure</code></p>
<p><img src="https://gitee.com/ZhiyuHuang/image2/raw/master/img/20201024174104.png" alt="image-20201024174104249"></p>
<p>可能的原因（列举自己的解决方案，可能会有其他的原因）</p>
<ul>
<li>如果是阿里云，需要保证阿里云的安全组策略是开放的</li>
<li>确保Linux的防火墙端口是开启的</li>
</ul>
<p>我的原因就是防火墙端口没有开启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看firewall服务状态</span></span><br><span class="line">systemctl status firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启、重启、关闭、firewalld.service服务</span></span><br><span class="line">service firewalld start   <span class="comment"># 开启</span></span><br><span class="line">service firewalld restart <span class="comment"># 重启</span></span><br><span class="line">service firewalld stop  <span class="comment"># 关闭</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看防火墙规则</span></span><br><span class="line">firewall-cmd --list-all    <span class="comment"># 查看全部信息</span></span><br><span class="line">firewall-cmd --list-ports  <span class="comment"># 只看端口信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=8081/tcp --permanent  <span class="comment">#开端口命令：</span></span><br><span class="line">systemctl restart firewalld.service   <span class="comment">#重启防火墙</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/ZhiyuHuang/image2/raw/master/img/20201024174729.png" alt="image-20201024174729546"></p>
]]></content>
      <categories>
        <category>服务器</category>
      </categories>
      <tags>
        <tag>项目部署</tag>
      </tags>
  </entry>
</search>
